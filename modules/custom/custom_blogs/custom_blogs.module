<?php

/**
 * Implements hook_page_attachments().
 */
function custom_blogs_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'custom_blogs/login-return-page-link';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function custom_blogs_preprocess_block(&$variables) {
  if ($variables['elements']["#plugin_id"] === 'system_menu_block:account') {
    $variables['#cache']['max-age'] = 0;
    $variables['elements']['#cache']['max-age'] = 0;
    if (!empty($variables['content']['#items']['user.page'])) {
      $variables['content']['#items']['user.page']['url'] = Drupal\Core\Url::fromUri('route:<nolink>');
      $variables['content']['#items']['user.page']['url']->setOption('attributes', ['data-drupal-link-system-path' => 'user']);
      $variables['content']['#items']['user.page']['title'] = t('@name', ['@name' => \Drupal::currentUser()->getDisplayName()]);
    }
  }
}

/**
 * Implements hook_link_alter().
 *
Abandoned due to https://www.drupal.org/node/2795443, https://www.drupal.org/node/3082473
function custom_blogs_link_alter(&$vars) {
  if (
    $vars['url']->isRouted()
    && $vars['url']->getRouteName() === 'user.page'
    && (string) $vars['text'] === (string) t('My account')
  ) {
    $vars['#cache']['max-age'] = 0;
    $vars['elements']['#cache']['max-age'] = 0;
    $vars['text'] = t('@name', ['@name' => \Drupal::currentUser()->getDisplayName()]);
    $vars['url'] = \Drupal\Core\Url::fromUri('route:<nolink>');
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Change tab names.
 */
function custom_blogs_menu_local_tasks_alter(&$data, $route_name) {
  if ($route_name === 'entity.node.canonical') {
    /** @var \Drupal\node\Entity\Node $node */
    $node = \Drupal::routeMatch()->getParameter('node');
    $bundles = ['blog', 'blog_post'];
    if ($node && in_array($node->bundle(), $bundles)) {
      $bundle_label = str_replace('Blog ', '', $node->type->entity->label());
      $data['tabs'][0]['entity.node.edit_form']['#link']['title'] = 'Edit '.$bundle_label;
      $data['tabs'][0]['og.og_admin_routes:node.og_admin_routes']['#link']['title'] = 'Blog Members';
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_blogs_form_views_exposed_form_alter(array &$form, $form_state, $form_id) {
  $path = \Drupal::service('path.current')->getPath();
  $view = $form_state->getStorage('view');
  if (($view['view']->id() == 'all_posts') && ($view['view']->current_display == 'block_1')) {
    //This moves the search button to the search box.
    $actions['actions'] = $form['actions'];
    unset($form['actions']);
    $positions = array_keys($form);
    $keys_position = array_search('keys', $positions);
    //Note that to actually move actions, it needs to be set within a numerically keyed array.
    array_splice($form, $keys_position + 1, 0, [$actions]);
  }
  //Unset these if we arent on the all-posts page with optional date
  if (($view['view']->id() == 'all_posts') && (!strpos($path, 'all-posts'))) {
    unset($form['keys']['#title']);
    unset($form['#info']['filter-keys']['label']);
    unset($form['blog']);
  }
  if (($view['view']->id() == 'recent_posts') && ($view['view']->current_display == 'block_1')) {
    //This alters the title of the search box and adds a reset link.
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node->hasField('og_audience')) {
      $blog_id = $node->get('og_audience')->target_id;
      $blog = \Drupal\node\Entity\Node::load($blog_id);
      if ($blog) {
        $form['#action'] = $blog->toUrl()->toString();
        $form['keys']['#title'] = $form['keys']['#title'] . ' ' . $blog->getTitle();
        $form['#info']['filter-keys']['label'] = $form['#info']['filter-keys']['label'] . ' ' . $blog->getTitle();
      }
    }
/*    elseif ($node->hasField('field_blog_post_group_ref')) {
      $blog_id = $node->get('field_blog_post_group_ref')->target_id;
      $blog = \Drupal\node\Entity\Node::load($blog_id);
      if ($blog) {
        $form['#action'] = $blog->toUrl()->toString();
        $form['keys']['#title'] = $form['keys']['#title'] . ' ' . $blog->getTitle();
        $form['#info']['filter-keys']['label'] = $form['#info']['filter-keys']['label'] . ' ' . $blog->getTitle();
      }
    }
*/    else {
      $form['keys']['#title'] = $form['keys']['#title'] . ' ' . $node->getTitle();
      $form['#info']['filter-keys']['label'] = $form['#info']['filter-keys']['label'] . ' ' . $node->getTitle();
    }
    if ($form['actions']['reset']['#access']) {
      $form['actions']['reset'] = ['#markup' => \Drupal\Core\Render\Markup::create('<div><a href="'.$form['#action'].'">Reset results list</a></div>')];
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function custom_blogs_views_pre_render(\Drupal\views\ViewExecutable $view) {
  if ($view->id() == 'blogs_filtered_by_membership' && $view->current_display == 'entity_reference_1') {
    //arg[0] is loggedin user. pass to get memberships.
    //don't do anything if user is og administrator.
    $user = \Drupal\user\Entity\User::load($view->args[0]);
    if (!$user->hasPermission('administer organic groups')) {
      $og_view = \Drupal::entityTypeManager()
        ->getStorage('view')
        ->load('get_membership_ids')
        ->getExecutable();
      $og_view->initDisplay();
      $og_view->setDisplay('default');
      $og_view->setArguments([$view->args[0]]);
      $og_view->execute();
      $og_result = $og_view->result;
      $blog_ids = [];
      foreach ($og_result as $result) {
        $blog_ids[] = $result->_entity->getGroupId();
      }
      foreach ($view->result as $id => $value) {
        $nid = $value->_entity->id();
        if (!in_array($nid, $blog_ids)) {
          unset($view->result[$id]);
        }
      }
    }
  }
  if ($view->id() == 'blogroll_view' && $view->current_display == 'block_2') {
    //This removes the block if the field isnt set.
    if (count($view->result) == 1 && empty($view->result[0]->_entity->get('field_blogroll')->getValue())) {
      unset($view->result[0]);
    }
  }
  if ($view->id() == 'author' && $view->current_display == 'page_1') {
    $author_display_name = '';
    if (isset($view->args[0]) && $author = user_load_by_name($view->args[0])) {
      $author_display_name = $author->get('field_user_display')->value;
      if (isset($view->args[1])) {
        $author_names = [];
        $conjunction = ' or ';
        if (strpos($view->args[1], ',') !== FALSE) {
          $author_names = explode(',', $view->args[1]);
          $conjunction = ' and ';
        }
        else if (strpos($view->args[1], '+') !== FALSE) {
          $author_names = explode('+', $view->args[1]);
        }
        else if (strpos($view->args[1], ' ') !== FALSE) {
          $author_names = explode(' ', $view->args[1]);
        }
        else {
          $author_names[] = $view->args[1];
        }
        $last = array_key_last($author_names);
        foreach ($author_names as $key => $author_name) {
          if ($author_name != $view->args[0]) {
            $join = ', ';
            if ($key == $last) {
              $join = $conjunction;
            }
            $author = user_load_by_name($author_name);
            $author_display_name .= $join . $author->get('field_user_display')->value;
          }
        }
      }
      $view->setTitle('Posts by '. $author_display_name);
    }
  }
}

/**
+ * Implements hook_views_post_render().
+ */
function custom_blogs_views_post_render(\Drupal\views\ViewExecutable $view, array &$output, \Drupal\views\Plugin\views\cache\CachePluginBase $cache) {
  if ($view->id() == 'taxonomy_term' && $view->current_display == 'page_1') {
    if (isset($view->args[1]) && $view->args[1] != 'all') {
      $blog_id = $view->args[1];
      $blog = \Drupal\node\Entity\Node::load($blog_id);
      $title = $blog->getTitle();
      $view->setTitle($view->getTitle() . ' in Blog <em>' . $title . '</em>');
    }
  }
  if ($view->id() == 'browse_by_tag' && $view->current_display == 'block_2') {
    if (isset($view->args[0]) && is_numeric($view->args[0])) {
      $blog_id = $view->args[0];
      $blog = \Drupal\node\Entity\Node::load($blog_id);
      $title = $blog->getTitle();
      $view->setTitle($view->getTitle() . ' in <em>' . $title . '</em>');
    }
  }
  if ($view->id() == 'recent_posts' && $view->current_display == 'block_1') {
    if (empty(\Drupal::request()->get('keys'))) {
      //This sets the title if the search keys are empty.
      $view->setTitle('Recent Posts');
    }
    else {
      $blog_id = $view->args[0];
      $blog = \Drupal\node\Entity\Node::load($blog_id);
      $title = $blog->getTitle();
      $view->setTitle('Posts in ' . $title);
    }
  }
}
