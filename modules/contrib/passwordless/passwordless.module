<?php

/**
 * @file
 * Module file for Passwordless.
 */

 use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\passwordless\PasswordlessForm;
use Drupal\passwordless\PasswordlessGinForm;
use Drupal\passwordless\PasswordlessMail;

/**
 * Implements hook_menu_links_discovered_alter().
 */
function passwordless_menu_links_discovered_alter(&$links) {
  unset($links['user.pass']);
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function passwordless_menu_local_tasks_alter(&$data, $route_name) {
  if (!empty($data['tabs'][0]['user.pass'])) {
    unset($data['tabs'][0]['user.pass']);
  }
}

/**
 * Implements hook_form_alter().
 */
function passwordless_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(PasswordlessForm::class)
    ->alter($form, $form_state, $form_id);
  // Isolate gin-specific modifications as much as possible.
  if (\Drupal::moduleHandler()->moduleExists('gin_login')) {
    \Drupal::service('class_resolver')
      ->getInstanceFromDefinition(PasswordlessGinForm::class)
      ->alter($form, $form_state, $form_id);
  }
}

/**
 * Implements hook_block_view_alter().
 */
function passwordless_block_view_alter(array &$build, BlockPluginInterface $block) {
  switch ($block->getPluginId()) {
    case 'user_login_block' :
      unset($build['content']['user_links']['#items']['request_password']);
    break;
  }
}

/**
 * Implements hook_mail_alter().
 */
function passwordless_mail_alter(&$message) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(PasswordlessMail::class)
    ->alter($message);
}
